{"version":3,"sources":["components/Header.js","components/Quote.js","components/Body.js","components/App.js","index.js"],"names":["Header","className","Quote","props","quote","author","Body","useState","setQuote","quotes","setQuotes","displayedQuotes","setDisplayedQuotes","useEffect","getInitQuote","a","axios","get","response","data","getRandomQuote","min","max","length","Math","ceil","floor","random","onClick","updatedDisplayedQuotes","pop","getPreviousQuote","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAEaA,EAAS,WACpB,OACE,wBAAQC,UAAU,SAAlB,SACE,sD,wDCHOC,EAAQ,SAACC,GACpB,OACE,sBAAKF,UAAU,6BAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBE,EAAMC,QAC9B,qBAAKH,UAAU,SAAf,SAAyBE,EAAME,aCFxBC,EAAO,SAACH,GACnB,MAAoCI,mBAAS,IAA7C,0BAAOH,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAUG,EAAxB,KACA,EAA0BD,mBAAS,IAAnC,mBAAKE,EAAL,KAAaC,EAAb,KACA,EAA4CH,mBAAS,IAArD,mBAAKI,EAAL,KAAsBC,EAAtB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAIA,EAAY,uCAAG,8BAAAC,EAAA,sEACIC,IAAMC,IACzB,yIAFe,cACbC,EADa,gBAIAA,EAASC,KAJT,OAIbA,EAJa,OAKjBT,EAAUS,GACVC,EAAeD,GANE,2CAAH,qDASZC,EAAiB,SAACX,GACpB,IAA6BY,EAAKC,EAMlC,EAAwBb,GANKY,EAKO,EALFC,EAKKb,EAAOc,OAJ5CF,EAAMG,KAAKC,KAAKJ,GAChBC,EAAME,KAAKE,MAAMJ,GACVE,KAAKE,MAAMF,KAAKG,UAAYL,EAAMD,GAAOA,KAG5CjB,EAAN,EAAMA,MAAOC,EAAb,EAAaA,OACbO,EAAmB,GAAD,mBAAKD,GAAL,CAAsB,CAAEP,QAAOC,aACjDG,EAAS,CAAEJ,QAAOC,YAgBpB,OACE,uBAAMJ,UAAU,OAAhB,UACE,cAAC,EAAD,CAAOG,MAAOA,EAAOC,OAAQA,IAC7B,sBAAKJ,UAAU,+BAAf,UACE,wBACEA,UAAU,gBACV2B,QAAS,YAnBM,SAACjB,GACtB,GAAIA,EAAgBY,OAAS,EAAI,EAAG,CAClC,MAAwBZ,EAAgBA,EAAgBY,OAAS,EAAI,GAA/DnB,EAAN,EAAMA,MAAOC,EAAb,EAAaA,OACTwB,EAAyBlB,EAC7BkB,EAAuBC,MACvBlB,EAAmBiB,GACnBrB,EAAS,CAAEJ,QAAOC,gBACb,GAA+B,IAA3BM,EAAgBY,OAAc,CACvC,MAAwBZ,EAAgBA,EAAgBY,OAAS,GAA3DnB,EAAN,EAAMA,MAAOC,EAAb,EAAaA,OACbG,EAAS,CAAEJ,QAAOC,YAWZ0B,CAAiBpB,IAHrB,sBAQA,wBAAQV,UAAU,eAAe2B,QAAS,kBAAMR,EAAeX,IAA/D,wB,MC7COuB,MATf,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8bd75b7e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = () => {\n  return (\n    <header className='header'>\n      <h1>Zadanie 4 - React</h1>\n    </header>\n  );\n};\n","import React from 'react';\n\nexport const Quote = (props) => {\n  return (\n    <div className='container container--quote'>\n      <div className='quote'>{props.quote}</div>\n      <div className='author'>{props.author}</div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Quote } from './Quote';\n\nexport const Body = (props) => {\n  let [{ quote, author }, setQuote] = useState({});\n  let [quotes, setQuotes] = useState([]);\n  let [displayedQuotes, setDisplayedQuotes] = useState([]);\n\n  useEffect(() => {\n    getInitQuote();\n  }, []);\n\n  let getInitQuote = async () => {\n    let response = await axios.get(\n      'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json'\n    );\n    let data = await response.data;\n    setQuotes(data);\n    getRandomQuote(data);\n  };\n\n  let getRandomQuote = (quotes) => {\n    let getRandomInt = function (min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min);\n    };\n    let randomQuoteIndex = getRandomInt(0, quotes.length);\n    let { quote, author } = quotes[randomQuoteIndex];\n    setDisplayedQuotes([...displayedQuotes, { quote, author }]);\n    setQuote({ quote, author });\n  };\n\n  let getPreviousQuote = (displayedQuotes) => {\n    if (displayedQuotes.length - 1 > 0) {\n      let { quote, author } = displayedQuotes[displayedQuotes.length - 1 - 1];\n      let updatedDisplayedQuotes = displayedQuotes;\n      updatedDisplayedQuotes.pop();\n      setDisplayedQuotes(updatedDisplayedQuotes);\n      setQuote({ quote, author });\n    } else if (displayedQuotes.length === 1) {\n      let { quote, author } = displayedQuotes[displayedQuotes.length - 1];\n      setQuote({ quote, author });\n    }\n  };\n\n  return (\n    <main className='body'>\n      <Quote quote={quote} author={author} />\n      <div className='container container--buttons'>\n        <button\n          className='btn btn--prev'\n          onClick={() => {\n            getPreviousQuote(displayedQuotes);\n          }}\n        >\n          Previous\n        </button>\n        <button className='btn btn--new' onClick={() => getRandomQuote(quotes)}>\n          New\n        </button>\n      </div>\n    </main>\n  );\n};\n","import React from 'react';\nimport { Header } from './Header';\nimport { Body } from './Body';\nimport '../App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}